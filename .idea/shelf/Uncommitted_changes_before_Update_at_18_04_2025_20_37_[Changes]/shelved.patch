Index: app/src/main/res/layout/activity_login.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><LinearLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    android:background=\"@drawable/purple\"\r\n    android:padding=\"20dp\"\r\n    android:gravity=\"center\">\r\n\r\n    <TextView\r\n        android:fontFamily=\"@font/font6\"\r\n\r\n        android:text=\"CONNEXION\"\r\n        android:textSize=\"30sp\"\r\n        android:textColor=\"@color/white\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:gravity=\"center\"\r\n        android:layout_marginBottom=\"20dp\"/>\r\n    <com.google.android.material.textfield.TextInputLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:hint=\"Nom d'utilisateur\"\r\n        app:startIconDrawable=\"@android:drawable/ic_menu_myplaces\"> <!-- Icône utilisateur -->\r\n\r\n        <com.google.android.material.textfield.TextInputEditText\r\n            android:id=\"@+id/username\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:minHeight=\"50dp\"\r\n            android:paddingStart=\"12dp\"\r\n            android:paddingEnd=\"12dp\"\r\n            android:gravity=\"start|center_vertical\"/>\r\n    </com.google.android.material.textfield.TextInputLayout>\r\n\r\n    <com.google.android.material.textfield.TextInputLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:hint=\"Mot de passe\"\r\n        app:startIconDrawable=\"@android:drawable/ic_lock_lock\"\r\n        app:endIconMode=\"password_toggle\">\r\n\r\n    <com.google.android.material.textfield.TextInputEditText\r\n        android:id=\"@+id/password\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:minHeight=\"50dp\"\r\n        android:paddingStart=\"12dp\"\r\n        android:paddingEnd=\"12dp\"\r\n        android:inputType=\"textPassword\"/>\r\n</com.google.android.material.textfield.TextInputLayout>\r\n\r\n\r\n\r\n\r\n    <Button\r\n        android:fontFamily=\"@font/font6\"\r\n\r\n        android:id=\"@+id/btn_login\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:background=\"@drawable/custom_back_button\"\r\n        android:paddingStart=\"40dp\"\r\n        android:paddingEnd=\"40dp\"\r\n        android:paddingTop=\"12dp\"\r\n        android:paddingBottom=\"12dp\"\r\n        android:text=\"CONNEXION\"\r\n        android:textColor=\"@color/white\"\r\n        android:gravity=\"center\"\r\n        android:layout_gravity=\"center\"/> <!-- Centre le bouton -->\r\n    <TextView\r\n        android:fontFamily=\"@font/font6\"\r\n\r\n        android:id=\"@+id/txt_or\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:text=\"Don't have one yet !\"\r\n        android:textColor=\"@color/white\"\r\n        android:textSize=\"15sp\"\r\n        android:gravity=\"center\"\r\n        android:layout_gravity=\"center\"/>\r\n    <TextView\r\n        android:fontFamily=\"@font/font6\"\r\n\r\n        android:id=\"@+id/txt_o2r\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:text=\"SignUp\"\r\n        android:textColor=\"@color/white\"\r\n        android:textSize=\"15sp\"\r\n        android:gravity=\"center\"\r\n        android:layout_gravity=\"center\"/>\r\n\r\n\r\n    <TextView\r\n        android:fontFamily=\"@font/font6\"\r\n\r\n        android:id=\"@+id/go_to_signup\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:background=\"@drawable/custom_back_button\"\r\n        android:paddingStart=\"40dp\"\r\n        android:paddingEnd=\"40dp\"\r\n        android:paddingTop=\"12dp\"\r\n        android:paddingBottom=\"12dp\"\r\n        android:text=\"Créer un compte\"\r\n        android:textColor=\"@color/white\"\r\n        android:gravity=\"center\"\r\n        android:layout_gravity=\"center\"/> <!-- Centre le bouton -->\r\n\r\n\r\n\r\n</LinearLayout>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_login.xml b/app/src/main/res/layout/activity_login.xml
--- a/app/src/main/res/layout/activity_login.xml	(revision 2741cf6232f1ea544e9e94cbdf1763d7b09b953e)
+++ b/app/src/main/res/layout/activity_login.xml	(date 1744912550700)
@@ -11,7 +11,7 @@
     <TextView
         android:fontFamily="@font/font6"
 
-        android:text="CONNEXION"
+        android:text="connextion"
         android:textSize="30sp"
         android:textColor="@color/white"
         android:layout_width="wrap_content"
Index: app/src/main/java/com/example/projet/LanguageUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.projet;\r\n\r\nimport android.app.Activity;\r\nimport android.content.SharedPreferences;\r\nimport android.content.res.Configuration;\r\nimport android.os.Build;\r\nimport android.util.DisplayMetrics;\r\n\r\nimport java.util.Locale;\r\n\r\npublic class LanguageUtils {\r\n\r\n    public static void setLocale(Activity activity, String langCode) {\r\n        // Mettre à jour la langue dans les préférences partagées\r\n        SharedPreferences sharedPreferences = activity.getSharedPreferences(\"MyPrefs\", Activity.MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putString(\"app_language\", langCode);\r\n        editor.apply();\r\n\r\n        // Configurer la langue pour l'application\r\n        Locale locale = new Locale(langCode);\r\n        Locale.setDefault(locale);\r\n        Configuration config = activity.getResources().getConfiguration();\r\n\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {\r\n            config.setLocale(locale);\r\n        } else {\r\n            config.locale = locale;\r\n        }\r\n\r\n        DisplayMetrics dm = activity.getResources().getDisplayMetrics();\r\n        activity.getResources().updateConfiguration(config, dm);\r\n    }\r\n\r\n    public static String getSavedLanguage(Activity activity) {\r\n        SharedPreferences prefs = activity.getSharedPreferences(\"MyPrefs\", Activity.MODE_PRIVATE);\r\n        return prefs.getString(\"app_language\", \"en\"); // Default is English\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/projet/LanguageUtils.java b/app/src/main/java/com/example/projet/LanguageUtils.java
--- a/app/src/main/java/com/example/projet/LanguageUtils.java	(revision 2741cf6232f1ea544e9e94cbdf1763d7b09b953e)
+++ b/app/src/main/java/com/example/projet/LanguageUtils.java	(date 1744830680401)
@@ -36,4 +36,10 @@
         SharedPreferences prefs = activity.getSharedPreferences("MyPrefs", Activity.MODE_PRIVATE);
         return prefs.getString("app_language", "en"); // Default is English
     }
+    public static void applySavedLocale(Activity activity) {
+        SharedPreferences sharedPreferences = activity.getSharedPreferences("MyPrefs", Activity.MODE_PRIVATE);
+        String langCode = sharedPreferences.getString("app_language", "en"); // Anglais par défaut
+        setLocale(activity, langCode);
+    }
+
 }
Index: app/src/main/java/com/example/projet/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.projet;\r\n\r\nimport android.app.Activity;\r\nimport android.content.SharedPreferences;\r\nimport android.content.res.Configuration;\r\nimport android.graphics.Point;\r\nimport android.os.Bundle;\r\nimport android.os.StrictMode;\r\nimport android.view.Display;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.widget.Toast;\r\nimport java.io.InputStreamReader;\r\nimport java.io.BufferedReader;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\nimport java.util.Locale;\r\n\r\npublic class MainActivity extends BaseActivity {\r\n    private GameView gameView;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n        Point size = new Point();\r\n        display.getSize(size);\r\n\r\n        gameView = new GameView(this, size.x, size.y);\r\n        String currentLang = LanguageUtils.getSavedLanguage(this);\r\n        LanguageUtils.setLocale(this, currentLang);\r\n        setContentView(gameView);\r\n        /*\r\n        SharedPreferences prefs = getSharedPreferences(\"MyPrefs\", MODE_PRIVATE);\r\n        String lang = prefs.getString(\"app_language\", \"en\");\r\n        Locale locale = new Locale(lang);\r\n        Locale.setDefault(locale);\r\n        Configuration config = new Configuration();\r\n        config.setLocale(locale);\r\n        getResources().updateConfiguration(config, getResources().getDisplayMetrics());*/\r\n\r\n\r\n        // Mettre en plein écran\r\n        /*\r\n        requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n\r\n        gameView = new GameView(this, getWindowManager().getDefaultDisplay().getWidth(),\r\n                getWindowManager().getDefaultDisplay().getHeight());\r\n        setContentView(gameView);\r\n\r\n        // Autoriser les connexions réseau sur le thread principal pour des fins de test\r\n        StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();\r\n        StrictMode.setThreadPolicy(policy);*/\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        gameView.startGame();\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        gameView.stopGame();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/projet/MainActivity.java b/app/src/main/java/com/example/projet/MainActivity.java
--- a/app/src/main/java/com/example/projet/MainActivity.java	(revision 2741cf6232f1ea544e9e94cbdf1763d7b09b953e)
+++ b/app/src/main/java/com/example/projet/MainActivity.java	(date 1744830920155)
@@ -21,6 +21,7 @@
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+        LanguageUtils.applySavedLocale(this);
         super.onCreate(savedInstanceState);
 
         Display display = getWindowManager().getDefaultDisplay();
Index: app/src/main/java/com/example/projet/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.projet;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\npublic class LoginActivity extends BaseActivity {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        // Initialisation des vues\r\n        EditText usernameInput = findViewById(R.id.username); // Champ nom d'utilisateur\r\n        EditText passwordInput = findViewById(R.id.password); // Champ mot de passe\r\n\r\n        findViewById(R.id.btn_login).setOnClickListener(v -> {\r\n            String username = usernameInput.getText().toString();\r\n            String password = passwordInput.getText().toString();\r\n\r\n            if (username.isEmpty() || password.isEmpty()) {\r\n                Toast.makeText(LoginActivity.this, \"Veuillez remplir tous les champs.\", Toast.LENGTH_SHORT).show();\r\n                return;\r\n            }\r\n\r\n            DatabaseHelper dbHelper = new DatabaseHelper(LoginActivity.this);\r\n            if (dbHelper.checkUser(username, password)) {\r\n                Toast.makeText(LoginActivity.this, \"Connexion réussie !\", Toast.LENGTH_SHORT).show();\r\n                Intent intent = new Intent(LoginActivity.this, MainActivity.class);\r\n                intent.putExtra(\"USERNAME\", username);\r\n                startActivity(intent);\r\n            } else {\r\n                Toast.makeText(LoginActivity.this, \"Nom d'utilisateur ou mot de passe incorrect.\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n        // Redirection vers la page d'inscription\r\n        findViewById(R.id.go_to_signup).setOnClickListener(v -> {\r\n            Intent intent = new Intent(LoginActivity.this, SignupActivity.class);\r\n            startActivity(intent);\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/projet/LoginActivity.java b/app/src/main/java/com/example/projet/LoginActivity.java
--- a/app/src/main/java/com/example/projet/LoginActivity.java	(revision 2741cf6232f1ea544e9e94cbdf1763d7b09b953e)
+++ b/app/src/main/java/com/example/projet/LoginActivity.java	(date 1744830920138)
@@ -11,6 +11,7 @@
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+        LanguageUtils.applySavedLocale(this);
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_login);
 
Index: app/src/main/java/com/example/projet/SignupActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.projet;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\npublic class SignupActivity extends BaseActivity {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_signup);\r\n\r\n        // Initialisation des vues\r\n        EditText nameInput = findViewById(R.id.name); // Champ nom\r\n        EditText emailInput = findViewById(R.id.email); // Champ email\r\n        EditText passwordInput = findViewById(R.id.signup_password); // Champ mot de passe\r\n\r\n        // Gestion du bouton d'inscription\r\n        findViewById(R.id.btn_signup).setOnClickListener(v -> {\r\n            String name = nameInput.getText().toString();\r\n            String email = emailInput.getText().toString();\r\n            String password = passwordInput.getText().toString();\r\n\r\n            if (name.isEmpty() || email.isEmpty() || password.isEmpty()) {\r\n                Toast.makeText(SignupActivity.this, \"Veuillez remplir tous les champs.\", Toast.LENGTH_SHORT).show();\r\n                return;\r\n            }\r\n\r\n            DatabaseHelper dbHelper = new DatabaseHelper(SignupActivity.this);\r\n            if (dbHelper.addUser(name, email, password)) {\r\n                Toast.makeText(SignupActivity.this, \"Inscription réussie !\", Toast.LENGTH_SHORT).show();\r\n                Intent intent = new Intent(SignupActivity.this, LoginActivity.class);\r\n                startActivity(intent);\r\n            } else {\r\n                Toast.makeText(SignupActivity.this, \"Email déjà utilisé.\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/projet/SignupActivity.java b/app/src/main/java/com/example/projet/SignupActivity.java
--- a/app/src/main/java/com/example/projet/SignupActivity.java	(revision 2741cf6232f1ea544e9e94cbdf1763d7b09b953e)
+++ b/app/src/main/java/com/example/projet/SignupActivity.java	(date 1744830920121)
@@ -11,6 +11,7 @@
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+        LanguageUtils.applySavedLocale(this);
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_signup);
 
Index: app/src/main/java/com/example/projet/SettingsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.projet;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.media.AudioManager;\r\nimport android.media.MediaPlayer;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.view.animation.Animation;\r\nimport android.view.animation.AnimationUtils;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.CheckBox;\r\nimport android.widget.ImageButton;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.SeekBar;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class SettingsActivity extends BaseActivity {\r\n\r\n    private SeekBar volumeSeekBar;\r\n    private CheckBox muteCheckBox;\r\n    private Spinner languageSpinner;\r\n    private SharedPreferences sharedPreferences;\r\n    private MediaPlayer mediaPlayer;\r\n    private AudioManager audioManager;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_settings);\r\n\r\n        sharedPreferences = getSharedPreferences(\"MyPrefs\", MODE_PRIVATE);\r\n        String currentLang = LanguageUtils.getSavedLanguage(this);\r\n\r\n        TextView currentLanguageView = findViewById(R.id.current_language);\r\n        languageSpinner = findViewById(R.id.language_spinner);\r\n        volumeSeekBar = findViewById(R.id.volume_slider);\r\n        muteCheckBox = findViewById(R.id.mute_checkbox);\r\n\r\n        currentLanguageView.setText(currentLang.equals(\"fr\") ? getString(R.string.french) : getString(R.string.english));\r\n        currentLanguageView.setOnClickListener(v -> languageSpinner.performClick());\r\n\r\n        ArrayAdapter<CharSequence> languageAdapter = ArrayAdapter.createFromResource(this,\r\n                R.array.languages, android.R.layout.simple_spinner_item);\r\n        languageAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        languageSpinner.setAdapter(languageAdapter);\r\n\r\n        languageSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                String selectedLang = (position == 1) ? \"fr\" : \"en\";\r\n                if (!selectedLang.equals(currentLang)) {\r\n                    LanguageUtils.setLocale(SettingsActivity.this, selectedLang);\r\n                    recreate();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {}\r\n        });\r\n\r\n        Animation clickAnimation = AnimationUtils.loadAnimation(this, R.anim.click_scale);\r\n        LinearLayout homeButton = findViewById(R.id.homeButton);\r\n        LinearLayout musicButton = findViewById(R.id.musicButton);\r\n        LinearLayout favoriteButton = findViewById(R.id.favoriteButton);\r\n        LinearLayout settingsButton = findViewById(R.id.settingsButton);\r\n\r\n        homeButton.setOnClickListener(v -> {\r\n            v.startAnimation(clickAnimation);\r\n            setActiveButton(homeButton);\r\n            startActivity(new Intent(this, MainActivity.class));\r\n        });\r\n\r\n        musicButton.setOnClickListener(v -> {\r\n            v.startAnimation(clickAnimation);\r\n            setActiveButton(musicButton);\r\n            startActivity(new Intent(this, SelectionActivity.class));\r\n        });\r\n\r\n        favoriteButton.setOnClickListener(v -> {\r\n            v.startAnimation(clickAnimation);\r\n            setActiveButton(favoriteButton);\r\n            Toast.makeText(this, \"Favorites\", Toast.LENGTH_SHORT).show();\r\n        });\r\n\r\n        settingsButton.setOnClickListener(v -> {\r\n            v.startAnimation(clickAnimation);\r\n            setActiveButton(settingsButton);\r\n        });\r\n\r\n        NavigationHelper.setupNavigationBar(this);\r\n\r\n        mediaPlayer = MediaPlayer.create(this, R.raw.piano_note1);\r\n        mediaPlayer.setLooping(true);\r\n        mediaPlayer.start();\r\n\r\n        audioManager = (AudioManager) getSystemService(AUDIO_SERVICE);\r\n        int maxVolume = audioManager.getStreamMaxVolume(AudioManager.STREAM_MUSIC);\r\n        int currentVolume = sharedPreferences.getInt(\"volume\", maxVolume / 2);\r\n\r\n        volumeSeekBar.setMax(maxVolume);\r\n        volumeSeekBar.setProgress(currentVolume);\r\n        audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, currentVolume, 0);\r\n\r\n        volumeSeekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {\r\n            @Override public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\r\n                if (fromUser) {\r\n                    audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, progress, 0);\r\n                    mediaPlayer.setVolume(progress / (float) maxVolume, progress / (float) maxVolume);\r\n                    sharedPreferences.edit().putInt(\"volume\", progress).apply();\r\n                }\r\n            }\r\n            @Override public void onStartTrackingTouch(SeekBar seekBar) {}\r\n            @Override public void onStopTrackingTouch(SeekBar seekBar) {}\r\n        });\r\n\r\n        muteCheckBox.setChecked(sharedPreferences.getBoolean(\"isMuted\", false));\r\n        muteCheckBox.setOnCheckedChangeListener((buttonView, isChecked) -> {\r\n            if (isChecked) {\r\n                mediaPlayer.setVolume(0, 0);\r\n            } else {\r\n                int volume = volumeSeekBar.getProgress();\r\n                mediaPlayer.setVolume(volume / (float) maxVolume, volume / (float) maxVolume);\r\n            }\r\n            sharedPreferences.edit().putBoolean(\"isMuted\", isChecked).apply();\r\n        });\r\n\r\n        ImageButton loginIcon = findViewById(R.id.loginIcon);\r\n        loginIcon.setOnClickListener(v -> {\r\n            Intent loginIntent = new Intent(SettingsActivity.this, LoginActivity.class);\r\n            startActivity(loginIntent);\r\n        });\r\n\r\n        setActiveButton(settingsButton);\r\n    }\r\n\r\n    private void setActiveButton(LinearLayout activeButton) {\r\n        LinearLayout homeButton = findViewById(R.id.homeButton);\r\n        LinearLayout musicButton = findViewById(R.id.musicButton);\r\n        LinearLayout favoriteButton = findViewById(R.id.favoriteButton);\r\n        LinearLayout settingsButton = findViewById(R.id.settingsButton);\r\n\r\n        List<LinearLayout> buttons = new ArrayList<>();\r\n        buttons.add(homeButton);\r\n        buttons.add(musicButton);\r\n        buttons.add(favoriteButton);\r\n        buttons.add(settingsButton);\r\n\r\n        for (LinearLayout button : buttons) {\r\n            button.setBackground(null);\r\n            if (button == activeButton) {\r\n                button.setAlpha(1.0f);\r\n                button.setBackgroundResource(R.drawable.nav_button_background_selected);\r\n            } else {\r\n                button.setAlpha(0.85f);\r\n                button.setBackgroundResource(R.drawable.nav_button_background);\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        if (mediaPlayer != null) {\r\n            mediaPlayer.release();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/projet/SettingsActivity.java b/app/src/main/java/com/example/projet/SettingsActivity.java
--- a/app/src/main/java/com/example/projet/SettingsActivity.java	(revision 2741cf6232f1ea544e9e94cbdf1763d7b09b953e)
+++ b/app/src/main/java/com/example/projet/SettingsActivity.java	(date 1744830920162)
@@ -30,8 +30,12 @@
     private MediaPlayer mediaPlayer;
     private AudioManager audioManager;
 
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+        // ➤ Appliquer la langue sauvegardée AVANT toute autre initialisation
+        LanguageUtils.applySavedLocale(this);
+
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_settings);
 
@@ -51,13 +55,15 @@
         languageAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
         languageSpinner.setAdapter(languageAdapter);
 
+        languageSpinner.setSelection(currentLang.equals("fr") ? 1 : 0); // ➤ Affiche la langue courante dans le spinner
+
         languageSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
             @Override
             public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                 String selectedLang = (position == 1) ? "fr" : "en";
                 if (!selectedLang.equals(currentLang)) {
                     LanguageUtils.setLocale(SettingsActivity.this, selectedLang);
-                    recreate();
+                    recreate(); // ➤ Recharge l'UI avec la bonne langue
                 }
             }
 
@@ -140,6 +146,7 @@
         setActiveButton(settingsButton);
     }
 
+
     private void setActiveButton(LinearLayout activeButton) {
         LinearLayout homeButton = findViewById(R.id.homeButton);
         LinearLayout musicButton = findViewById(R.id.musicButton);
Index: app/src/main/java/com/example/projet/SelectionActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.projet;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.view.animation.Animation;\r\nimport android.view.animation.AnimationUtils;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.Toast;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class SelectionActivity extends BaseActivity {\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_selection);\r\n\r\n        Animation clickAnimation = AnimationUtils.loadAnimation(this, R.anim.click_scale);\r\n\r\n        LinearLayout homeButton = findViewById(R.id.homeButton);\r\n        LinearLayout musicButton = findViewById(R.id.musicButton);\r\n        LinearLayout favoriteButton = findViewById(R.id.favoriteButton);\r\n        LinearLayout settingsButton = findViewById(R.id.settingsButton);\r\n\r\n        homeButton.setOnClickListener(v -> {\r\n            v.startAnimation(clickAnimation);\r\n            setActiveButton(homeButton);\r\n            startActivity(new Intent(this, MainActivity.class));\r\n        });\r\n\r\n        musicButton.setOnClickListener(v -> {\r\n            v.startAnimation(clickAnimation);\r\n            setActiveButton(musicButton);\r\n        });\r\n\r\n        favoriteButton.setOnClickListener(v -> {\r\n            v.startAnimation(clickAnimation);\r\n            setActiveButton(favoriteButton);\r\n            Toast.makeText(this, \"Favorites\", Toast.LENGTH_SHORT).show();\r\n        });\r\n\r\n        settingsButton.setOnClickListener(v -> {\r\n            v.startAnimation(clickAnimation);\r\n            setActiveButton(settingsButton);\r\n            startActivity(new Intent(this, SettingsActivity.class));\r\n        });\r\n\r\n        NavigationHelper.setupNavigationBar(this);\r\n        setActiveButton(musicButton);\r\n    }\r\n\r\n    private void setActiveButton(LinearLayout activeButton) {\r\n        LinearLayout homeButton = findViewById(R.id.homeButton);\r\n        LinearLayout musicButton = findViewById(R.id.musicButton);\r\n        LinearLayout favoriteButton = findViewById(R.id.favoriteButton);\r\n        LinearLayout settingsButton = findViewById(R.id.settingsButton);\r\n\r\n        List<LinearLayout> buttons = new ArrayList<>();\r\n        buttons.add(homeButton);\r\n        buttons.add(musicButton);\r\n        buttons.add(favoriteButton);\r\n        buttons.add(settingsButton);\r\n\r\n        for (LinearLayout button : buttons) {\r\n            button.setBackground(null);\r\n            if (button == activeButton) {\r\n                button.setAlpha(1.0f);\r\n                button.setBackgroundResource(R.drawable.nav_button_background_selected);\r\n            } else {\r\n                button.setAlpha(0.85f);\r\n                button.setBackgroundResource(R.drawable.nav_button_background);\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/projet/SelectionActivity.java b/app/src/main/java/com/example/projet/SelectionActivity.java
--- a/app/src/main/java/com/example/projet/SelectionActivity.java	(revision 2741cf6232f1ea544e9e94cbdf1763d7b09b953e)
+++ b/app/src/main/java/com/example/projet/SelectionActivity.java	(date 1744830920170)
@@ -14,6 +14,7 @@
 public class SelectionActivity extends BaseActivity {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+        LanguageUtils.applySavedLocale(this);
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_selection);
 
Index: app/src/main/java/com/example/projet/PauseActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.projet;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.content.res.ColorStateList;\r\nimport android.graphics.Color;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageButton;\r\nimport android.widget.Toast;\r\nimport android.os.VibrationEffect;\r\nimport android.os.Vibrator;\r\nimport android.animation.ObjectAnimator;\r\nimport android.animation.PropertyValuesHolder;\r\nimport android.content.Context;\r\nimport android.os.VibrationEffect;\r\nimport android.os.Vibrator;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\npublic class PauseActivity extends BaseActivity {\r\n    private Button resumeButton;\r\n    private Button restartButton;\r\n    private Button homeButton;\r\n    private Button settingsButton;  // Déclaration du bouton settings\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_pause);\r\n\r\n        resumeButton = findViewById(R.id.resume_button);\r\n        restartButton = findViewById(R.id.restart_button);\r\n        homeButton = findViewById(R.id.home_button);\r\n        settingsButton = findViewById(R.id.settings_button);\r\n    // Ajouter l'effet de clic pour tous les boutons\r\n        applyClickEffect(resumeButton);\r\n        applyClickEffect(restartButton);\r\n        applyClickEffect(homeButton);\r\n        applyClickEffect(settingsButton);\r\n\r\n\r\n        // Bouton \"Reprendre\" : Ferme l'écran de pause et reprend le jeu\r\n        resumeButton.setOnClickListener(v -> finish());\r\n\r\n        // Bouton \"Restart\" : Redémarre le jeu complètement\r\n        restartButton.setOnClickListener(v -> {\r\n            Intent intent = new Intent(PauseActivity.this, MainActivity.class);\r\n            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n            startActivity(intent);\r\n            finish();\r\n        });\r\n\r\n        // Bouton \"Home\" : Retourne à l'écran d'accueil (SplashActivity)\r\n        homeButton.setOnClickListener(v -> {\r\n            Intent intent = new Intent(PauseActivity.this, SplashActivity.class);\r\n            intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n            startActivity(intent);\r\n            finish();\r\n        });\r\n        // Bouton \"Settings\" : Ouvre l'écran des paramètres\r\n        settingsButton.setOnClickListener(v -> {\r\n            Intent settingsIntent = new Intent(PauseActivity.this, SettingsActivity.class);\r\n            startActivity(settingsIntent); // Démarre l'activité des paramètres\r\n        });\r\n\r\n\r\n\r\n    }\r\n    // \uD83D\uDCCC La méthode doit être ici, en dehors de onCreate() mais dans la classe\r\n    private void applyClickEffect(Button button) {\r\n        button.setOnTouchListener((v, event) -> {\r\n            if (event.getAction() == MotionEvent.ACTION_DOWN) {\r\n                // Effet de rétrécissement\r\n                ObjectAnimator scaleDown = ObjectAnimator.ofPropertyValuesHolder(\r\n                        button,\r\n                        PropertyValuesHolder.ofFloat(View.SCALE_X, 0.9f),\r\n                        PropertyValuesHolder.ofFloat(View.SCALE_Y, 0.9f)\r\n                );\r\n                scaleDown.setDuration(100);\r\n                scaleDown.start();\r\n\r\n                // Vibration courte (si dispo)\r\n                Vibrator vibrator = (Vibrator) getSystemService(Context.VIBRATOR_SERVICE);\r\n                if (vibrator != null && vibrator.hasVibrator()) {\r\n                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n                        // Pour Android 8.0 (API 26+) et plus récent\r\n                        vibrator.vibrate(VibrationEffect.createOneShot(50, VibrationEffect.DEFAULT_AMPLITUDE));\r\n                    } else {\r\n                        // Pour les versions plus anciennes\r\n                        vibrator.vibrate(50);\r\n                    }\r\n                }\r\n            } else if (event.getAction() == MotionEvent.ACTION_UP || event.getAction() == MotionEvent.ACTION_CANCEL) {\r\n                // Retour à la taille normale\r\n                ObjectAnimator scaleUp = ObjectAnimator.ofPropertyValuesHolder(\r\n                        button,\r\n                        PropertyValuesHolder.ofFloat(View.SCALE_X, 1f),\r\n                        PropertyValuesHolder.ofFloat(View.SCALE_Y, 1f)\r\n                );\r\n                scaleUp.setDuration(100);\r\n                scaleUp.start();\r\n            }\r\n            return false; // Laisse le clic fonctionner normalement\r\n        });\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/projet/PauseActivity.java b/app/src/main/java/com/example/projet/PauseActivity.java
--- a/app/src/main/java/com/example/projet/PauseActivity.java	(revision 2741cf6232f1ea544e9e94cbdf1763d7b09b953e)
+++ b/app/src/main/java/com/example/projet/PauseActivity.java	(date 1744830920147)
@@ -29,6 +29,7 @@
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+        LanguageUtils.applySavedLocale(this);
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_pause);
 
Index: app/src/main/java/com/example/projet/GameView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.projet;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.BlurMaskFilter;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.Paint;\r\nimport android.graphics.Path;\r\nimport android.graphics.Typeface;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MotionEvent;\r\nimport android.view.SurfaceHolder;\r\nimport android.view.SurfaceView;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Iterator;\r\nimport java.util.Random;\r\nimport com.example.projet.Tile;\r\n\r\n\r\npublic class GameView extends SurfaceView implements Runnable {\r\n    private Thread gameThread;\r\n    private boolean isPlaying = true;\r\n    private boolean isGameOver = false;\r\n    private boolean isDialogShown = false;\r\n\r\n    private boolean isPaused = false;\r\n\r\n\r\n    private SurfaceHolder holder;\r\n    private Paint paint;\r\n    private ArrayList<Tile> tiles;\r\n    private int screenWidth, screenHeight;\r\n    private int tileWidth, tileHeight;\r\n    private int tileSpeed ;\r\n    private int score = 0;\r\n    private Random random;\r\n    private SoundManager soundManager;\r\n\r\n\r\n\r\n    private Bitmap background;\r\n    private Bitmap tileImage;\r\n    private Bitmap pauseButtonImage;\r\n    private Bitmap redTileImage;  // Image pour la tuile rouge\r\n    private Tile lastMissedTile = null; // Dernière tuile ratée\r\n\r\n    //private long lastSpeedIncreaseTime = 0;\r\n    private ArrayList<Particle> festiveParticles = new ArrayList<>();\r\n    private boolean hasCelebrated = false;\r\n\r\n    private final int SPEED_INCREASE_INTERVAL = 3000;\r\n    ; // Augmenter la hauteur pour que ce soit plus rectangulaire\r\n    private Bitmap star;\r\n    private Bitmap filledStar;\r\n    // Variables globales pour le feedback\r\n    private String feedbackText = \"\";\r\n    private long feedbackStartTime = 0;\r\n    private final int FEEDBACK_DURATION = 1000; // Durée en ms (1 seconde)\r\n    private int baseSpeed = 25; // Vitesse de base\r\n    private int speedIncreaseInterval = 5000; // Intervalle d'augmentation de vitesse (5 secondes)\r\n    private long lastSpeedIncreaseTime = System.currentTimeMillis();\r\n    private float speedMultiplier = 1.0f; // Multiplicateur de vitesse initial\r\n    private int[] lastTileY;\r\n    int starY = 150;\r\n\r\n    public GameView(Context context, int width, int height) {\r\n        super(context);\r\n        screenWidth = width;\r\n        screenHeight = height;\r\n        holder = getHolder();\r\n        paint = new Paint();\r\n        tiles = new ArrayList<>();\r\n        random = new Random();\r\n        soundManager = new SoundManager(context);\r\n\r\n        tileWidth = screenWidth / 4;\r\n        tileHeight = 300;\r\n        tileSpeed = 25;\r\n        //lastTileY = new int[4];\r\n\r\n        background = BitmapFactory.decodeResource(getResources(), R.drawable.purple);\r\n        background = Bitmap.createScaledBitmap(background, screenWidth, screenHeight, false);\r\n\r\n\r\n\r\n        pauseButtonImage = BitmapFactory.decodeResource(getResources(), R.drawable.pause_button);\r\n        pauseButtonImage = Bitmap.createScaledBitmap(pauseButtonImage, 100, 100, false);\r\n\r\n        redTileImage = BitmapFactory.decodeResource(getResources(), R.drawable.red);\r\n        redTileImage = Bitmap.createScaledBitmap(redTileImage,(int)(screenWidth / 3.2), 450, false);\r\n\r\n        soundManager.playBackgroundMusic();\r\n        // Chargement et redimensionnement des étoiles UNE SEULE FOIS\r\n        star = BitmapFactory.decodeResource(getResources(), R.drawable.star1);\r\n        star = Bitmap.createScaledBitmap(star, 80, 80, false);\r\n\r\n        filledStar = BitmapFactory.decodeResource(getResources(), R.drawable.filled_star);\r\n        filledStar = Bitmap.createScaledBitmap(filledStar, 80, 80, false);\r\n        addTile();\r\n    }\r\n    private void generateFestiveParticles() {\r\n        int centerX = screenWidth / 2;\r\n        int centerY = starY + 100;\r\n\r\n        // Ajouter un grand nombre de particules pour l'effet explosif\r\n        for (int i = 0; i < 100; i++) { // Augmenter le nombre de particules pour un effet plus spectaculaire\r\n            festiveParticles.add(new Particle(centerX, centerY));\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void run() {\r\n        while (isPlaying) {\r\n            update();\r\n            draw();\r\n            try {\r\n                Thread.sleep(30);\r\n            } catch (InterruptedException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n    private void addTile() {\r\n        // Si aucune tuile → on en crée 2 d'un coup\r\n        if (tiles.isEmpty()) {\r\n            spawnTileInRandomColumn();\r\n            spawnTileInRandomColumn();\r\n            return;\r\n        }\r\n\r\n        // Si la dernière tuile est assez basse → on en ajoute une nouvelle\r\n        Tile lastTile = tiles.get(tiles.size() - 1);\r\n        if (lastTile.y > tileHeight / 2) { // Dès qu'elle a parcouru 50% de sa hauteur\r\n            spawnTileInRandomColumn();\r\n        }\r\n    }\r\n\r\n    private void spawnTileInRandomColumn() {\r\n        int column;\r\n        do {\r\n            column = random.nextInt(4); // Colonne aléatoire (0-3)\r\n        } while (!isColumnValid(column)); // Vérifie qu'on ne répète pas la colonne précédente\r\n\r\n        // Calcul de la position Y avec un espacement\r\n        int minGap = tileHeight; // Espacement de 3 tuiles entre chaque\r\n        int spawnY = -tileHeight; // Position de départ en haut (juste hors écran)\r\n\r\n        // Si des tuiles existent déjà, on part de la dernière position\r\n        if (!tiles.isEmpty()) {\r\n            Tile lastTile = tiles.get(tiles.size() - 1);\r\n            spawnY = lastTile.y - minGap; // Nouvelle tuile placée plus haut\r\n        }\r\n\r\n        // Ajout d'une SEULE tuile avec la bonne position\r\n        tiles.add(new Tile(column * tileWidth, spawnY, tileWidth, tileHeight));\r\n    }\r\n\r\n    private boolean isColumnValid(int newColumn) {\r\n        if (tiles.isEmpty()) return true; // Aucune restriction si pas de tuiles\r\n\r\n        Tile lastTile = tiles.get(tiles.size() - 1);\r\n        int lastColumn = lastTile.x / tileWidth;\r\n\r\n        return newColumn != lastColumn; // Interdit la même colonne que la précédente\r\n    }\r\n\r\n\r\n    private void update() {\r\n        if (isGameOver) return;\r\n\r\n        // Augmentation progressive de la vitesse\r\n        long currentTime = System.currentTimeMillis();\r\n        if (currentTime - lastSpeedIncreaseTime > speedIncreaseInterval) {\r\n            speedMultiplier += 0.1f; // Augmente la vitesse de 10% à chaque intervalle\r\n            lastSpeedIncreaseTime = currentTime;\r\n        }\r\n\r\n        // Calcul de la vitesse actuelle\r\n        tileSpeed = (int)(baseSpeed * speedMultiplier);\r\n\r\n        // Augmentation supplémentaire basée sur le score\r\n        tileSpeed += score / 5;\r\n\r\n        for (Tile tile : tiles) {\r\n            tile.y += tileSpeed; // Déplacement vers le bas\r\n\r\n            if (tile.y + tile.height > screenHeight && !tile.isError) {\r\n                tile.isError = true;\r\n                isGameOver = true;\r\n            }\r\n        }\r\n        if (shouldAddTile()) {  // ← Ajoute cette condition\r\n            addTile();\r\n        }\r\n        // Met à jour les particules festives\r\n        Iterator<Particle> iterator = festiveParticles.iterator();\r\n        while (iterator.hasNext()) {\r\n            Particle p = iterator.next();\r\n            p.update();\r\n            if (!p.isAlive()) {\r\n                iterator.remove();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private boolean shouldAddTile() {\r\n        return tiles.isEmpty() || tiles.get(tiles.size() - 1).y > 100;\r\n    }\r\n\r\n    private void draw() {\r\n        if (holder.getSurface().isValid()) {\r\n            Canvas canvas = holder.lockCanvas();\r\n            canvas.drawBitmap(background, 0, 0, null);\r\n\r\n            paint.setColor(Color.LTGRAY);\r\n            for (int i = 1; i < 4; i++) {\r\n                canvas.drawLine(i * tileWidth, 0, i * tileWidth, screenHeight, paint);\r\n            }\r\n            paint.setColor(Color.WHITE);\r\n            paint.setStrokeWidth(5);\r\n            for (int i = 1; i < 4; i++) {\r\n                canvas.drawLine(i * tileWidth, 0, i * tileWidth, screenHeight, paint);\r\n            }\r\n\r\n            for (Tile tile : tiles) {\r\n\r\n                //Bitmap tileBitmap = (tile.isError) ? redTileImage : tileImage;\r\n                //canvas.drawBitmap(tileBitmap, tile.x, tile.y, null);\r\n                paint.setColor(tile.isError ? Color.RED : Color.BLACK);\r\n                canvas.drawRect(tile.x, tile.y, tile.x + tile.width, tile.y + tile.height, paint);\r\n            }\r\n            if (isGameOver && !isDialogShown) {\r\n                isDialogShown = true;\r\n                Activity activity = (Activity) getContext();\r\n                activity.runOnUiThread(() -> {\r\n                    new GameOverDialog(activity).show(score);\r\n                });\r\n            }\r\n            // Bouton de pause\r\n            canvas.drawBitmap(pauseButtonImage, screenWidth - pauseButtonImage.getWidth() - 20, 20, null);\r\n\r\n            // Affichage des étoiles, score et texte dynamique\r\n            drawStars(canvas);\r\n            drawScore(canvas);\r\n            drawFeedback(canvas);\r\n            drawFlash(canvas);\r\n\r\n\r\n            // drawDynamicText(canvas);\r\n            for (Particle p : festiveParticles) {\r\n                p.draw(canvas, paint);\r\n            }\r\n\r\n            holder.unlockCanvasAndPost(canvas);\r\n        }\r\n    }\r\n\r\n\r\n    private void drawScore(Canvas canvas) {\r\n        float scoreX = screenWidth / 2;\r\n        float scoreY = 450; // Ajusté pour être en dessous des étoiles\r\n\r\n        // Effet néon : Dessiner plusieurs couches avec une opacité dégradée\r\n        Paint neonPaint = new Paint();\r\n        neonPaint.setTypeface(Typeface.create(Typeface.DEFAULT, Typeface.BOLD));\r\n        neonPaint.setTextSize(120);\r\n        neonPaint.setColor(Color.WHITE);\r\n        neonPaint.setTextAlign(Paint.Align.CENTER);\r\n        neonPaint.setMaskFilter(new BlurMaskFilter(20, BlurMaskFilter.Blur.OUTER)); // Ajoute un flou lumineux\r\n\r\n        // Plusieurs couches pour un effet plus prononcé\r\n        for (int i = 6; i > 0; i--) {\r\n            neonPaint.setAlpha(40 * i); // Plus on s'éloigne, plus c'est transparent\r\n            canvas.drawText(\"\" + score, scoreX, scoreY, neonPaint);\r\n        }\r\n\r\n        // Texte principal en blanc pur (sans effet flou)\r\n        Paint mainPaint = new Paint();\r\n        mainPaint.setTypeface(Typeface.create(Typeface.DEFAULT, Typeface.BOLD));\r\n        mainPaint.setTextSize(120);\r\n        mainPaint.setColor(Color.WHITE);\r\n        mainPaint.setTextAlign(Paint.Align.CENTER);\r\n\r\n        canvas.drawText(\"\" + score, scoreX, scoreY, mainPaint);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    private void drawStars(Canvas canvas) {\r\n        int maxStars = 3;\r\n        int filledStars = Math.min(score / 2, maxStars); // Maximum 3 stars\r\n\r\n        int[] starSizes = {200, 200, 200}; // Custom size for each star\r\n        int spacing = 30;\r\n\r\n        int totalWidth = starSizes[0] + starSizes[1] + starSizes[2] + (2 * spacing);\r\n        int startX = (screenWidth / 2) - (totalWidth / 2);\r\n        int starY = 150;\r\n\r\n        // Animation effect for star flickering\r\n        long currentTime = System.currentTimeMillis();\r\n        float opacity = (float) Math.abs(Math.sin(currentTime / 500.0)); // Flickering effect\r\n\r\n        for (int i = 0; i < maxStars; i++) {\r\n            int size = starSizes[i];\r\n            boolean isFilled = i < filledStars;\r\n\r\n            // Make the filled star flicker by adjusting its opacity\r\n            drawStarWithOpacity(canvas, startX + size / 2, starY + size / 2, size / 2, isFilled, opacity);\r\n            startX += size + spacing;\r\n        }\r\n\r\n        // \uD83C\uDF89 Trigger the light burst when 3 stars are filled\r\n        if (filledStars == 3 && !hasCelebrated) {\r\n            generateLightBurst(); // Generate the festive particles\r\n            hasCelebrated = true; // Ensure it only happens once\r\n        }\r\n    }\r\n\r\n    private void generateLightBurst() {\r\n        int centerX = screenWidth / 2;\r\n        int centerY = screenHeight / 2;\r\n\r\n        for (int i = 0; i < 150; i++) {\r\n            festiveParticles.add(new Particle(centerX, centerY));\r\n        }\r\n        triggerFlash();\r\n\r\n\r\n        //soundManager.playSoundEffect(SoundManager.EFFECT_SPARKLE);\r\n    }\r\n    private void drawLightRays(Canvas canvas) {\r\n        Paint rayPaint = new Paint();\r\n        rayPaint.setColor(Color.YELLOW);\r\n        rayPaint.setAlpha(40); // très transparent\r\n        rayPaint.setStyle(Paint.Style.FILL);\r\n\r\n        int centerX = screenWidth / 2;\r\n        int centerY = screenHeight / 2;\r\n\r\n        for (int i = 0; i < 12; i++) {\r\n            float angle = (float) (i * Math.PI / 6); // 12 rayons\r\n            float length = 1000;\r\n            float endX = (float) (centerX + length * Math.cos(angle));\r\n            float endY = (float) (centerY + length * Math.sin(angle));\r\n\r\n            Path ray = new Path();\r\n            ray.moveTo(centerX, centerY);\r\n            ray.lineTo(endX + 30, endY + 30);\r\n            ray.lineTo(endX - 30, endY - 30);\r\n            ray.close();\r\n            canvas.drawPath(ray, rayPaint);\r\n        }\r\n    }\r\n    private int flashAlpha = 0;\r\n\r\n    private void triggerFlash() {\r\n        flashAlpha = 255;\r\n    }\r\n\r\n    private void drawFlash(Canvas canvas) {\r\n        if (flashAlpha > 0) {\r\n            Paint flashPaint = new Paint();\r\n            flashPaint.setColor(Color.WHITE);\r\n            flashPaint.setAlpha(flashAlpha);\r\n            canvas.drawRect(0, 0, screenWidth, screenHeight, flashPaint);\r\n            flashAlpha -= 10; // s’estompe progressivement\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    private void drawStarWithOpacity(Canvas canvas, float centerX, float centerY, float radius, boolean filled, float opacity) {\r\n        Paint paint = new Paint();\r\n        paint.setAntiAlias(true);\r\n        paint.setStyle(filled ? Paint.Style.FILL_AND_STROKE : Paint.Style.STROKE);\r\n        paint.setStrokeWidth(4);\r\n\r\n        if (filled) {\r\n            paint.setColor(Color.parseColor(\"#FFD700\"));  // Couleur or\r\n            paint.setMaskFilter(new BlurMaskFilter(15, BlurMaskFilter.Blur.NORMAL));  // Effet lumineux\r\n        } else {\r\n            paint.setColor(Color.LTGRAY);\r\n        }\r\n\r\n        paint.setAlpha((int) (255 * opacity));\r\n\r\n        Path path = new Path();\r\n        int numPoints = 5;\r\n        double angle = Math.PI / numPoints;\r\n\r\n        for (int i = 0; i < 2 * numPoints; i++) {\r\n            double r = (i % 2 == 0) ? radius : radius / 2.5;\r\n            double a = i * angle - Math.PI / 2;\r\n            float x = (float) (centerX + r * Math.cos(a));\r\n            float y = (float) (centerY + r * Math.sin(a));\r\n            if (i == 0) {\r\n                path.moveTo(x, y);\r\n            } else {\r\n                path.lineTo(x, y);\r\n            }\r\n        }\r\n        path.close();\r\n\r\n        canvas.drawPath(path, paint);\r\n    }\r\n\r\n\r\n\r\n    // Appeler cette méthode quand le joueur réussit des tuiles\r\n    private void showFeedback(String message) {\r\n        feedbackText = message;\r\n        feedbackStartTime = System.currentTimeMillis();\r\n    }\r\n\r\n    // Dessiner le feedback animé\r\n    private void drawFeedback(Canvas canvas) {\r\n        if (!feedbackText.isEmpty()) {\r\n            long elapsedTime = System.currentTimeMillis() - feedbackStartTime;\r\n\r\n            if (elapsedTime < FEEDBACK_DURATION) {\r\n                // Gestion de l’opacité pour le fade-out progressif\r\n                int alpha = 255;\r\n                if (elapsedTime > FEEDBACK_DURATION / 2) {\r\n                    alpha = (int) ((1 - ((elapsedTime - FEEDBACK_DURATION / 2) / (FEEDBACK_DURATION / 2.0))) * 255);\r\n                }\r\n\r\n                float x = screenWidth / 2;\r\n                float y = screenHeight / 3;\r\n\r\n                // Effet néon : plusieurs couches de texte flou\r\n                Paint neonPaint = new Paint();\r\n                neonPaint.setTypeface(Typeface.create(Typeface.DEFAULT, Typeface.BOLD));\r\n                neonPaint.setTextSize(120);\r\n                neonPaint.setColor(Color.WHITE);\r\n                neonPaint.setTextAlign(Paint.Align.CENTER);\r\n                neonPaint.setAlpha(alpha);\r\n                neonPaint.setMaskFilter(new BlurMaskFilter(30, BlurMaskFilter.Blur.OUTER));\r\n\r\n                for (int i = 5; i > 0; i--) {  // Ajoute plusieurs couches pour un effet plus intense\r\n                    neonPaint.setAlpha(alpha / (i + 1)); // Atténuation progressive du halo\r\n                    canvas.drawText(feedbackText, x, y, neonPaint);\r\n                }\r\n\r\n                // Texte principal en blanc pur\r\n                Paint mainPaint = new Paint();\r\n                mainPaint.setTypeface(Typeface.create(Typeface.DEFAULT, Typeface.BOLD));\r\n                mainPaint.setTextSize(120);\r\n                mainPaint.setColor(Color.WHITE);\r\n                mainPaint.setTextAlign(Paint.Align.CENTER);\r\n                mainPaint.setAlpha(alpha);\r\n\r\n                canvas.drawText(feedbackText, x, y, mainPaint);\r\n            } else {\r\n                feedbackText = \"\"; // Cacher le feedback après expiration\r\n            }\r\n        }\r\n    }\r\n    private void showPauseMenu() {\r\n        // Vérification si le Context est une instance d'Activity\r\n        isGameOver=false;\r\n        if (getContext() instanceof Activity) {\r\n            Activity activity = (Activity) getContext();\r\n            activity.runOnUiThread(() -> {\r\n                AlertDialog.Builder builder = new AlertDialog.Builder(activity, R.style.TransparentDialog);\r\n                LayoutInflater inflater = activity.getLayoutInflater();\r\n                View dialogView = inflater.inflate(R.layout.pause_menu, null);\r\n                builder.setView(dialogView);\r\n\r\n                AlertDialog dialog = builder.create();\r\n                dialog.setCancelable(false);\r\n\r\n                // Supprimer le fond gris de la boîte de dialogue\r\n                dialog.getWindow().setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));\r\n\r\n                Button resumeButton = dialogView.findViewById(R.id.resume_button);\r\n                resumeButton.setOnClickListener(v -> {\r\n                    v.animate().scaleX(1.1f).scaleY(1.1f).setDuration(100).withEndAction(() -> {\r\n                        v.animate().scaleX(1f).scaleY(1f).setDuration(100);\r\n                        dialog.dismiss();\r\n                        isPaused = false;\r\n                        isPlaying = true;\r\n                        startGame();\r\n                    });\r\n                });\r\n\r\n                Button restartButton = dialogView.findViewById(R.id.restart_button);\r\n                restartButton.setOnClickListener(v -> {\r\n                    v.animate().scaleX(1.1f).scaleY(1.1f).setDuration(100).withEndAction(() -> {\r\n                        v.animate().scaleX(1f).scaleY(1f).setDuration(100);\r\n                        dialog.dismiss();\r\n                        isPaused = false;\r\n                        isPlaying = true;\r\n                        restartGame();\r\n                    });\r\n                });\r\n\r\n                Button homeButton = dialogView.findViewById(R.id.home_button);\r\n                homeButton.setOnClickListener(v -> {\r\n                    v.animate().scaleX(1.1f).scaleY(1.1f).setDuration(100).withEndAction(() -> {\r\n                        v.animate().scaleX(1f).scaleY(1f).setDuration(100);\r\n                        Intent intent = new Intent(getContext(), HomeActivity.class);\r\n                        getContext().startActivity(intent);\r\n                        activity.finish();\r\n                    });\r\n                });\r\n                Button settingsButton = dialogView.findViewById(R.id.settings_button);\r\n                settingsButton.setOnClickListener(v -> {\r\n                    v.animate().scaleX(1.1f).scaleY(1.1f).setDuration(100).withEndAction(() -> {\r\n                        v.animate().scaleX(1f).scaleY(1f).setDuration(100);\r\n                        Intent settingsIntent = new Intent(getContext(), SettingsActivity.class);\r\n                        getContext().startActivity(settingsIntent);\r\n                    });\r\n                });\r\n\r\n                dialog.show();\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    public void restartGame() {\r\n        resetGameState(); // Réinitialiser toutes les variables\r\n        startGame(); // Démarrer une nouvelle parti\r\n\r\n    }\r\n\r\n\r\n    public void resetGameState() {\r\n        tiles.clear();\r\n        score = 0;\r\n        speedMultiplier = 1.0f; // Réinitialiser le multiplicateur\r\n        lastSpeedIncreaseTime = System.currentTimeMillis();\r\n        isDialogShown = false;\r\n        isGameOver = false;\r\n    }\r\n\r\n\r\n\r\n    public void startGame() {\r\n        isPlaying = true;\r\n        gameThread = new Thread(this);\r\n        gameThread.start();\r\n        soundManager.playBackgroundMusic();\r\n    }\r\n\r\n    public void stopGame() {\r\n        isPlaying = false;\r\n        try {\r\n            gameThread.join();\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n        soundManager.stopBackgroundMusic();\r\n    }\r\n\r\n    private void pauseGame() {\r\n        isPlaying = false;\r\n        isPaused = true;\r\n        showPauseMenu();\r\n    }\r\n\r\n    @Override\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        if (isGameOver || isPaused) return true;\r\n\r\n        if (event.getAction() == MotionEvent.ACTION_DOWN) {\r\n            float touchX = event.getX();\r\n            float touchY = event.getY();\r\n\r\n            // 1. Vérifier le bouton pause\r\n            if (touchX > screenWidth - pauseButtonImage.getWidth() - 20 &&\r\n                    touchX < screenWidth - 20 &&\r\n                    touchY > 20 && touchY < 20 + pauseButtonImage.getHeight()) {\r\n                pauseGame();\r\n                return true;\r\n            }\r\n\r\n            // 2. Vérifier si le clic est dans la grille\r\n            if (touchX < 0 || touchX > screenWidth) {\r\n                return false;\r\n            }\r\n\r\n            // 3. Vérifier la collision avec les tuiles noires\r\n            boolean hitValidTile = false;\r\n            int column = (int)(touchX / tileWidth);\r\n            float clickY = touchY;\r\n\r\n            // Vérifier d'abord si on touche une tuile noire existante\r\n            for (Tile tile : new ArrayList<>(tiles)) {\r\n                if (tile.x == column * tileWidth &&\r\n                        clickY >= tile.y && clickY <= tile.y + tile.height) {\r\n\r\n                    // Tuile noire touchée correctement\r\n                    tiles.remove(tile);\r\n                    score++;\r\n                    showFeedback(\"Great!\");\r\n                    hitValidTile = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // 4. Si erreur (clic dans le vide)\r\n            if (!hitValidTile) {\r\n                // Vérifier qu'il n'y a pas déjà une tuile noire à cette position\r\n                boolean canPlaceRedTile = true;\r\n                for (Tile tile : tiles) {\r\n                    if (tile.x == column * tileWidth &&\r\n                            Math.abs(tile.y - clickY) < tile.height) {\r\n                        canPlaceRedTile = false;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (canPlaceRedTile) {\r\n                    // Créer une tuile rouge d'erreur SEULEMENT si la zone est libre\r\n                    Tile errorTile = new Tile(column * tileWidth, (int)clickY, tileWidth, tileHeight);\r\n                    errorTile.isError = true;\r\n                    tiles.add(errorTile);\r\n                    isGameOver = true;\r\n                }\r\n\r\n            }\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\nclass Particle {\r\n    private float x, y;\r\n    private float dx, dy;\r\n    private int life;\r\n    private Paint paint;\r\n    private float size;\r\n\r\n    public Particle(float x, float y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.dx = (float)(Math.random() * 10 - 5);\r\n        this.dy = (float)(Math.random() * 10 - 5);\r\n        this.size = (float)(Math.random() * 10 + 5);\r\n        this.life = 60;\r\n\r\n        paint = new Paint();\r\n        paint.setColor(Color.parseColor(\"#FFD700\")); // Or brillant\r\n        paint.setAlpha((int)(Math.random() * 155 + 100));\r\n        paint.setMaskFilter(new BlurMaskFilter(10, BlurMaskFilter.Blur.NORMAL));\r\n    }\r\n\r\n    public void update() {\r\n        x += dx;\r\n        y += dy;\r\n        dy += 0.3f; // gravité\r\n        life--;\r\n        paint.setAlpha(Math.max(0, paint.getAlpha() - 4)); // fade out\r\n    }\r\n\r\n    public boolean isAlive() {\r\n        return life > 0;\r\n    }\r\n\r\n    public void draw(Canvas canvas, Paint unused) {\r\n        canvas.drawCircle(x, y, size, paint);\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/projet/GameView.java b/app/src/main/java/com/example/projet/GameView.java
--- a/app/src/main/java/com/example/projet/GameView.java	(revision 2741cf6232f1ea544e9e94cbdf1763d7b09b953e)
+++ b/app/src/main/java/com/example/projet/GameView.java	(date 1744785051541)
@@ -10,6 +10,8 @@
 import android.graphics.Color;
 import android.graphics.Paint;
 import android.graphics.Path;
+import android.graphics.RadialGradient;
+import android.graphics.Shader;
 import android.graphics.Typeface;
 import android.view.LayoutInflater;
 import android.view.MotionEvent;
@@ -112,7 +114,7 @@
 
         // Ajouter un grand nombre de particules pour l'effet explosif
         for (int i = 0; i < 100; i++) { // Augmenter le nombre de particules pour un effet plus spectaculaire
-            festiveParticles.add(new Particle(centerX, centerY));
+            festiveParticles.add(new Particle(centerX, centerY, true));
         }
     }
 
@@ -258,7 +260,7 @@
 
             // drawDynamicText(canvas);
             for (Particle p : festiveParticles) {
-                p.draw(canvas, paint);
+                p.draw(canvas);
             }
 
             holder.unlockCanvasAndPost(canvas);
@@ -268,23 +270,8 @@
 
     private void drawScore(Canvas canvas) {
         float scoreX = screenWidth / 2;
-        float scoreY = 450; // Ajusté pour être en dessous des étoiles
-
-        // Effet néon : Dessiner plusieurs couches avec une opacité dégradée
-        Paint neonPaint = new Paint();
-        neonPaint.setTypeface(Typeface.create(Typeface.DEFAULT, Typeface.BOLD));
-        neonPaint.setTextSize(120);
-        neonPaint.setColor(Color.WHITE);
-        neonPaint.setTextAlign(Paint.Align.CENTER);
-        neonPaint.setMaskFilter(new BlurMaskFilter(20, BlurMaskFilter.Blur.OUTER)); // Ajoute un flou lumineux
+        float scoreY = 450; // Position du score
 
-        // Plusieurs couches pour un effet plus prononcé
-        for (int i = 6; i > 0; i--) {
-            neonPaint.setAlpha(40 * i); // Plus on s'éloigne, plus c'est transparent
-            canvas.drawText("" + score, scoreX, scoreY, neonPaint);
-        }
-
-        // Texte principal en blanc pur (sans effet flou)
         Paint mainPaint = new Paint();
         mainPaint.setTypeface(Typeface.create(Typeface.DEFAULT, Typeface.BOLD));
         mainPaint.setTextSize(120);
@@ -299,6 +286,7 @@
 
 
 
+
     private void drawStars(Canvas canvas) {
         int maxStars = 3;
         int filledStars = Math.min(score / 2, maxStars); // Maximum 3 stars
@@ -334,9 +322,10 @@
         int centerX = screenWidth / 2;
         int centerY = screenHeight / 2;
 
-        for (int i = 0; i < 150; i++) {
-            festiveParticles.add(new Particle(centerX, centerY));
+        for (int i = 0; i < 250; i++) {
+            festiveParticles.add(new Particle(centerX, centerY, true));
         }
+
         triggerFlash();
 
 
@@ -652,38 +641,61 @@
 class Particle {
     private float x, y;
     private float dx, dy;
-    private int life;
+    private float radius;
     private Paint paint;
-    private float size;
+    private int alpha;
+    private boolean isGolden;
 
-    public Particle(float x, float y) {
+    public Particle(float x, float y, boolean isGolden) {
         this.x = x;
         this.y = y;
-        this.dx = (float)(Math.random() * 10 - 5);
-        this.dy = (float)(Math.random() * 10 - 5);
-        this.size = (float)(Math.random() * 10 + 5);
-        this.life = 60;
+        this.isGolden = isGolden;
+        Random random = new Random();
+
+        // 💨 Mouvement plus rapide
+        this.dx = (random.nextFloat() - 0.5f) * 30;
+        this.dy = (random.nextFloat() - 0.5f) * 30;
 
-        paint = new Paint();
-        paint.setColor(Color.parseColor("#FFD700")); // Or brillant
-        paint.setAlpha((int)(Math.random() * 155 + 100));
-        paint.setMaskFilter(new BlurMaskFilter(10, BlurMaskFilter.Blur.NORMAL));
+        // ✨ Taille plus grande
+        this.radius = random.nextFloat() * 8f + 4f;
+
+        // 🟡 Couleur dorée
+        paint = new Paint(Paint.ANTI_ALIAS_FLAG);
+        paint.setColor(isGolden ? Color.rgb(255, 215, 0) : Color.WHITE);
+        paint.setStyle(Paint.Style.FILL);
+
+        // 🌫 Transparence initiale
+        this.alpha = 255;
     }
 
     public void update() {
         x += dx;
         y += dy;
-        dy += 0.3f; // gravité
-        life--;
-        paint.setAlpha(Math.max(0, paint.getAlpha() - 4)); // fade out
+        alpha -= 4; // Durée de vie réduite
+        if (alpha < 0) alpha = 0;
+    }
+
+    public void draw(Canvas canvas) {
+        paint.setAlpha(alpha);
+
+        if (isGolden) {
+            // 🌟 Glow doré
+            RadialGradient gradient = new RadialGradient(
+                    x, y, radius * 2,
+                    Color.argb(alpha, 255, 223, 0),
+                    Color.argb(0, 255, 223, 0),
+                    Shader.TileMode.CLAMP
+            );
+            paint.setShader(gradient);
+            canvas.drawCircle(x, y, radius * 2, paint);
+            paint.setShader(null);
+        }
+
+        // 💫 Coeur de la particule
+        canvas.drawCircle(x, y, radius, paint);
     }
 
     public boolean isAlive() {
-        return life > 0;
+        return alpha > 0;
     }
-
-    public void draw(Canvas canvas, Paint unused) {
-        canvas.drawCircle(x, y, size, paint);
-    }
 }
-
Index: app/src/main/java/com/example/projet/HomeActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.projet;\r\n\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.ImageButton;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\nimport android.widget.VideoView;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport android.view.animation.Animation;\r\nimport android.view.animation.AnimationUtils;\r\n\r\npublic class HomeActivity extends BaseActivity {\r\n\r\n    private VideoView videoView;\r\n    private ListView songListView;\r\n    private List<Song> songList;\r\n    private SongAdapter songAdapter;\r\n    private SoundManager soundManager;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState); // ✅ PAS de setLocale ici\r\n        setContentView(R.layout.activity_home);\r\n        // Maintenant on définit le contenu\r\n        setContentView(R.layout.activity_home);\r\n        // Initialisation des vues\r\n        videoView = findViewById(R.id.videoView);\r\n        songListView = findViewById(R.id.songListView);\r\n        soundManager = new SoundManager(this);\r\n\r\n        // Charger la vidéo\r\n        Uri videoUri = Uri.parse(\"android.resource://\" + getPackageName() + \"/\" + R.raw.piano);\r\n        videoView.setVideoURI(videoUri);\r\n\r\n        soundManager.playBackgroundMusic();\r\n\r\n        // Liste des sons\r\n        songList = new ArrayList<>();\r\n        songList.add(new Song(\"Piano Note 1\", \"piano_note1\"));\r\n        songList.add(new Song(\"Piano Note 2\", \"piano_note2\"));\r\n        songList.add(new Song(\"Piano Note 3\", \"piano_note3\"));\r\n\r\n        songAdapter = new SongAdapter(this, songList, soundManager);\r\n        songListView.setAdapter(songAdapter);\r\n\r\n        Animation clickAnimation = AnimationUtils.loadAnimation(this, R.anim.click_scale);\r\n\r\n        // Boutons\r\n        LinearLayout homeButton = findViewById(R.id.homeButton);\r\n        LinearLayout musicButton = findViewById(R.id.musicButton);\r\n        LinearLayout favoriteButton = findViewById(R.id.favoriteButton);\r\n        LinearLayout settingsButton = findViewById(R.id.settingsButton);\r\n\r\n        homeButton.setOnClickListener(v -> {\r\n            v.startAnimation(clickAnimation);\r\n\r\n            // Met à jour les styles des boutons pour indiquer que \"Home\" est actif\r\n            setActiveButton(homeButton);\r\n\r\n            // Message de confirmation\r\n            Toast.makeText(HomeActivity.this, \"Déjà sur la page d'accueil\", Toast.LENGTH_SHORT).show();\r\n        });\r\n\r\n\r\n\r\n        musicButton.setOnClickListener(v -> {\r\n            v.startAnimation(clickAnimation);\r\n            setActiveButton(musicButton);\r\n            startActivity(new Intent(HomeActivity.this, SelectionActivity.class));\r\n        });\r\n\r\n        settingsButton.setOnClickListener(v -> {\r\n            v.startAnimation(clickAnimation);\r\n            setActiveButton(settingsButton);\r\n            startActivity(new Intent(HomeActivity.this, SettingsActivity.class));\r\n        });\r\n\r\n        favoriteButton.setOnClickListener(v -> {\r\n            v.startAnimation(clickAnimation);\r\n            setActiveButton(favoriteButton);\r\n            Toast.makeText(this, \"Favorites\", Toast.LENGTH_SHORT).show();\r\n        });\r\n        NavigationHelper.setupNavigationBar(this);\r\n        setActiveButton(homeButton); // Active visuellement le bouton Home dès l’ouverture de l’activité\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        videoView.start(); // Redémarre la vidéo quand l'activité reprend\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        videoView.pause(); // Met en pause la vidéo quand l'activité est en pause\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        soundManager.release(); // Libérer les ressources\r\n    }\r\n\r\n\r\n    private void setActiveButton(LinearLayout activeButton) {\r\n        LinearLayout homeButton = findViewById(R.id.homeButton);\r\n        LinearLayout musicButton = findViewById(R.id.musicButton);\r\n        LinearLayout favoriteButton = findViewById(R.id.favoriteButton);\r\n        LinearLayout settingsButton = findViewById(R.id.settingsButton);\r\n\r\n        List<LinearLayout> buttons = new ArrayList<>();\r\n        buttons.add(homeButton);\r\n        buttons.add(musicButton);\r\n        buttons.add(favoriteButton);\r\n        buttons.add(settingsButton);\r\n\r\n        for (LinearLayout button : buttons) {\r\n            button.setBackground(null); // enlève tout résidu visuel\r\n\r\n            if (button == activeButton) {\r\n                button.setAlpha(1.0f);\r\n                button.setBackgroundResource(R.drawable.nav_button_background_selected);\r\n            } else {\r\n                button.setAlpha(0.85f);\r\n                button.setBackgroundResource(R.drawable.nav_button_background);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/projet/HomeActivity.java b/app/src/main/java/com/example/projet/HomeActivity.java
--- a/app/src/main/java/com/example/projet/HomeActivity.java	(revision 2741cf6232f1ea544e9e94cbdf1763d7b09b953e)
+++ b/app/src/main/java/com/example/projet/HomeActivity.java	(date 1744830920129)
@@ -26,7 +26,8 @@
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState); // ✅ PAS de setLocale ici
+        LanguageUtils.applySavedLocale(this);
+        super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_home);
         // Maintenant on définit le contenu
         setContentView(R.layout.activity_home);
